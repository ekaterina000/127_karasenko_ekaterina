QuickSort|12|int base = split(data, e,b); -> int base = split(data, b,e); |quickSort_UnsortedArray_ArrayIsCorrect
QuickSort|24|swap(data, left, baseElem);  -> swap(data, left-1, baseElem);|quickSort_UnsortedArray_ArrayIsCorrect
QuickSort|25|baseElem = left;             -> baseElem = left-1;           |quickSort_UnsortedArray_ArrayWithTwoSameElementsIsCorrect
QuickSort|29|swap(data, left+1, right);   -> swap(data, left, right);     |quickSort_UnsortedArray_ArrayWithTwoSameElementsIsCorrect
QuickSort|13|qSortRec(data, b, base - 2); -> qSortRec(data, b, base - 1); |quickSort_UnsortedArray_ArrayIsCorrect2
QuickSort|14|qSortRec(data, base + 2, e); -> qSortRec(data, base + 1, e); |quickSort_UnsortedArray_ArrayIsCorrect2

HeapSort|10|swap(0, data.length - sortedSize);                          -> swap(0, data.length - sortedSize-1);                |heapSort_UnsortedArray_ArrayIsCorrect
HeapSort|17|for (int i = start; i >= 1; --i)                            -> for (int i = start; i >= 0; --i)                    |heapSort_SortedArray_ArrayWithoutChanges
HeapSort|18|siftDown(i, 2 * i, 2 * i + 1, data.length);                 -> siftDown(i, 2 * i+1, 2 * i + 2, data.length);       |heapSort_UnsortedArray3_ArrayIsCorrect
HeapSort|38|siftDown(right, 2 * right + 1, 2 * right + 2, data.length); -> siftDown(right, 2 * right + 1, 2 * right + 2, size);|heapSort_UnsortedArray_ArrayIsCorrect2
HeapSort|34|siftDown(left, 2 * left, 2 * left + 1, size);               -> siftDown(left, 2 * left+1, 2 * left + 2, size);     |heapSort_UnsortedArray_ArrayIsCorrect3

MergeSort|19| merge(buffer, sorting, begin, middle - begin, end - middle);          -> merge(buffer, sorting, begin, middle - begin+1, end - middle);        |mergeSort_UnsortedArray_ArrayIsCorrect
MergeSort|35| else if (comparator.compare(from[firstFocus], from[secondFocus]) > 0) ->  else if (comparator.compare(from[firstFocus], from[secondFocus]) < 0)|mergeSort_UnsortedArray_ArrayIsCorrect
MergeSort|17| mergeSortRec(sorting, buffer, begin, middle);                         -> mergeSortRec(buffer,sorting, begin, middle);                          |mergeSort_FirstUnsortedElems_ArrayIsCorrect
MergeSort|32| to[resPos] = from[secondFocus++];                                     -> to[resPos++] = from[secondFocus++];                                   |mergeSort_SortedArray_ArrayWithoutChanges
MergeSort|18| mergeSortRec(sorting, buffer, middle + 1, end);                       -> mergeSortRec(buffer,sorting, middle + 1, end);                        |mergeSort_UnsortedArray_ArrayIsCorrect2
MergeSort|34| to[resPos++] = from[firstFocus];                                      -> to[resPos++] = from[firstFocus++];                                    |mergeSort_UnsortedArray_ArrayIsCorrect3
